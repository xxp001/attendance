<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coder520.user.dao.UserMapper">
	<resultMap id="BaseResultMap"
		type="com.coder520.user.entity.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="head_image" jdbcType="VARCHAR"
			property="headImage" />
		<result column="role" jdbcType="TINYINT" property="role" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, password, mobile, head_image,role
	</sql>
	<select id="countUsers" resultType="int">
		select
		count(0)
		from user
		<where>
			<if test="userName !=null and userName!=''">
				username like "%"#{userName}"%"
			</if>
		</where>
	</select>
	
	<select id="selectUsers" resultType="Map">
		select
		id,username,password,mobile,head_image,role
		from user
		<where>
			<if test="userName !=null and userName!=''">
				username like "%"#{userName}"%"
			</if>
		</where>
		LIMIT #{startRow} , #{pageSize}
	</select>
	
	<select id="selectByUsername" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where username = #{username}
	</select>
	
	<select id="selectAttend" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from attend
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.coder520.user.entity.User">
		insert into user (id, username, password,
		mobile, head_image
		)
		values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.coder520.user.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<!-- <if test="id != null"> id, </if> -->
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="role != null">
				role,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<!-- <if test="realName != null"> real_name, </if> -->
			<if test="headImage != null">
				head_image,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<!-- <if test="id != null"> #{id,jdbcType=BIGINT}, </if> -->
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=TINYINT},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<!-- <if test="realName != null"> #{realName,jdbcType=VARCHAR}, </if> -->
			<if test="headImage != null">
				#{headImage,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.coder520.user.entity.User">
		update user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="headImage != null">
				head_image = #{headImage,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.coder520.user.entity.User">
		update user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		head_image = #{headImage,jdbcType=VARCHAR},
		role = #{role,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

</mapper>